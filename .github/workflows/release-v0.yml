---
  name: Release-v0
  
  # This GitHub action creates a release when a tag that matches the pattern
  # "v*" (e.g. v0.1.0) is created.
  on:
    push:
      tags:
        - 'v[0-9]+.[0-9]+.[0-9]+*'
  
  permissions:
    contents: write
  
  jobs:
    generate-documentation:
      name: 'Generate documentation'
      runs-on: ubuntu-latest
      steps:
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: 1.11.3
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
          with:
            fetch-depth: 0
            token: ${{ secrets.ACCESS_TOKEN }}
        - name: Generate Terraform provider documentation
          run: |
            cd tools/
            go generate ./...

            cd ../
            echo 'docs/' >> .gitignore
            
        - name: Scan for secrets using gitleaks
          uses: gitleaks/gitleaks-action@v2
          with:
            scan-args: detect --no-git --source=${{ github.workspace }} --verbose --redact
  
        - name: Push docs
          run: |
            git config --local user.email gendocsbot@vnpay.vn
            git config --local user.name gendocsbot

            RELEASE_BRANCH="release/${GITHUB_REF#refs/tags/}"
            git checkout -b "$RELEASE_BRANCH" 

            git status

            git add .
            git commit -m "Generate new docs after ${GITHUB_REF#refs/tags/}"
            git push origin "$RELEASE_BRANCH"
  
  # git tag -f ${GITHUB_REF#refs/tags/}
  # git push origin -f ${GITHUB_REF#refs/tags/}
  
    terraform-provider-release:
      name: 'Terraform Provider Release'
      needs: [generate-documentation]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
          with:
            # Allow goreleaser to access older tag information.
            fetch-depth: 0
            # ref: release/${{ github.ref_name }}
  
        - name: Set up Go
          uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
          with:
            go-version-file: 'go.mod'
            cache: true
  
        - name: Import GPG key
          uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5 # v6.2.0
          id: import_gpg
          with:
            gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
            passphrase: ${{ secrets.PASSPHRASE }}
  
        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
          with:
            args: release --clean 
          env:
            # GitHub sets the GITHUB_TOKEN secret automatically.
            GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
            GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
  